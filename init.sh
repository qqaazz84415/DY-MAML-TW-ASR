#!/bin/bash

# ---------------------------------------------------------
# <--- Init --->

. ./cmd.sh
. ./path.sh
. utils/parse_options.sh

# ---------------------------------------------------------
# <--- Setting & Hyperparameters --->

nj=8  # n jobs
srand=0  # random seed
use_gpu=true

# training chunk-options
chunk_width=140  #,100,160

# ---------------------------------------------------------
# <--- Base Directory --->

dir_proj_base=$PWD                     # root of this project
dir_data_base=$dir_proj_base/data      # data preparation
dir_source_base=$dir_proj_base/source  # the input data which generated by kaldi scripts (e.g., features)
dir_target_base=$dir_proj_base/target  # final models
dir_result_base=$dir_proj_base/result  # decoding result
dir_log_base=$dir_proj_base/log        # saving execte logs

# ---------------------------------------------------------
# <--- Data Directory --->

train_set=train_Taiwanese_all
test_set=test_formosa
# test_set=dir_test/TW0311_revise
dir_data_dict=$dir_data_base/dict_tw    # language data: lexicon, phone set, ...
dir_data_text=$dir_data_base/lm_tw      # text corpus: for training language model
dir_data_train=$dir_data_base/$train_set  # speech corpus: for training acoustic model
dir_data_test=$dir_data_base/$test_set  # speech corpus: for testing decoder

file_data_vocab=$dir_data_text/corpus_general.vocab  # vocab set
file_data_text=$dir_data_text/corpus_dialog.txt      # text corpus

# ---------------------------------------------------------
# <--- Source Directory --->

dir_source_lang=$dir_source_base/lang                  # language data
dir_source_ngram=$dir_source_base/ngram_tw                # n-gram count of text corpus
dir_source_feat_mfcc=$dir_source_base/feature_mfcc     # feature (MFCC)
dir_source_feat_ivec=$dir_source_base/feature_ivector_cb  # feature (i-vector)

# ---------------------------------------------------------
# <--- Target Directory --->

dir_target_lm=$dir_target_base/language_model_ngram_tw   # language model (n-gram)
dir_target_gmm=$dir_target_base/acoustic_model_gmm_cb    # acoustic model (GMM)
dir_target_gmm_hmm=$dir_target_base/graph_gmm_hmm_cb     # graph (GMM-HMM)
dir_target_tdnn=$dir_target_base/acoustic_model_tdnn_cb  # acoustic model (TDNN)
dir_target_tdnn_hmm=$dir_target_base/graph_tdnn_hmm_cb   # graph (TDNN-HMM)

# ---------------------------------------------------------

# E.g.,
# 
# kaldi/egs/project_name/
# 
#   - data
#      - dict: lexicon.txt, nonsilence_phones.txt, ...
#      - lm: vocab set, text corpus
#      - train: text, utt2spk, wav.scp
#      - test: text, utt2spk, wav.scp
# 
#   - source
# 	   - lang
# 	   - ngram
# 	   - feature_mfcc
# 	   - feature_ivector
# 
#   - target
#      - language_model_ngram: L.fst, G.fst, words.txt, phones.txt...
#      - acoustic_model_gmm: model, ali, ...
#      - acoustic_model_tdnn: tree, lattice, model, ...
#      - graph_gmm_hmm: HCLG.fst, ...
#      - graph_tdnn_hmm: HCLG.fst, ...
# 
#   - result
#      - result_datetime: features, decode result, ...
# 
#   - log
#      - log_datetime: exec logs
# 
